Servidores Web de Altas Prestaciones

Práctica 3

1. He realizado la instalación de una tercera máquina virtual con Ubuntu Server 16.10.

2. He ejecutado los comandos indicados en el guión para instalar nginx.

3. Al no haberse creado ningún fichero de configuración por defecto (default.conf), lo he creado y he incluido la información que viene en el guión cambiando únicamente las IPs de la sección 'upstream apaches' para incluir las de mis dos máquinas servidoras (10.0.2.5 y 10.0.2.6).

4. He reiniciado el servicio nginx con:

service nginx restart

5. En la máquina 2 he eliminado del fichero /etc/crontab la tarea que había incluido en la práctica anterior para que se sincronizara automáticamente con la máquina 1.

6. Al hacer peticiones con cURL desde una cuarta máquina virtual me aparece la página de inicio de nginx por lo que he tenido que modificar el fichero /etc/nginx/nginx.conf y comentar la siguiente línea: 

include /etc/nginx/sites-enabled/*;

Después de hacer esta modificación y reiniciar el servicio compruebo que al hacer peticiones me responden las dos máquinas turnándose y el balanceo funciona correctamente.

7. He comprobado las prestaciones que ofrece nginx por medio de Apache Benchmark. Para ello he ejecutado el siguiente comando desde la máquina 4:

$ ab -n 1000000 -c 500 -r http://10.0.2.7/
This is ApacheBench, Version 2.3 <$Revision: 1430300 $>
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking 10.0.2.7 (be patient)
Completed 100000 requests
Completed 200000 requests
Completed 300000 requests
Completed 400000 requests
Completed 500000 requests
Completed 600000 requests
Completed 700000 requests
Completed 800000 requests
Completed 900000 requests
Completed 1000000 requests
Finished 1000000 requests


Server Software:        nginx/1.10.1
Server Hostname:        10.0.2.7
Server Port:            80

Document Path:          /
Document Length:        24 bytes

Concurrency Level:      500
Time taken for tests:   312.641 seconds
Complete requests:      1000000
Failed requests:        438
   (Connect: 0, Receive: 146, Length: 146, Exceptions: 146)
Write errors:           0
Total transferred:      268960726 bytes
HTML transferred:       23996496 bytes
Requests per second:    3198.56 [#/sec] (mean)
Time per request:       156.320 [ms] (mean)
Time per request:       0.313 [ms] (mean, across all concurrent requests)
Transfer rate:          840.12 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0  100 721.3      0   63160
Processing:    19   55 807.1     42  205342
Waiting:        0   50 236.9     41  102740
Total:         24  155 1092.8     42  206343

Percentage of the requests served within a certain time (ms)
  50%     42
  66%     42
  75%     43
  80%     43
  90%     44
  95%   1043
  98%   1241
  99%   3045
 100%  206343 (longest request)


8. He instalado haproxy introduciendo los comandos indicados en el guión y he modificado el fichero de configuración /etc/haproxy/haproxy.cfg tal y como se indica en la sección 4.2, modificando la sección 'backend servers' con las IPs de mis dos máquinas servidoras.

9. He parado el servicio nginx que se encontraba activo con:

service nginx stop

10. He lanzado haproxy con el comando indicado en el guión:

/usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg

11. He realizado peticiones con cURL desde la máquina 4 y compruebo que la maquina 1 y 2 se van turnando a la hora de recibir peticiones.

12. He comprobado las prestaciones de haproxy desde la máquina 4 con la misma carga con la que probé nginx. Estos son los resultados:

$ ab -n 1000000 -c 500 -r http://10.0.2.7/
This is ApacheBench, Version 2.3 <$Revision: 1430300 $>
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking 10.0.2.7 (be patient)
Completed 100000 requests
Completed 200000 requests
Completed 300000 requests
Completed 400000 requests
Completed 500000 requests
Completed 600000 requests
Completed 700000 requests
Completed 800000 requests
Completed 900000 requests
Completed 1000000 requests
Finished 1000000 requests


Server Software:        Apache/2.4.18
Server Hostname:        10.0.2.7
Server Port:            80

Document Path:          /
Document Length:        24 bytes

Concurrency Level:      500
Time taken for tests:   209.298 seconds
Complete requests:      1000000
Failed requests:        0
Write errors:           0
Total transferred:      270000000 bytes
HTML transferred:       24000000 bytes
Requests per second:    4777.87 [#/sec] (mean)
Time per request:       104.649 [ms] (mean)
Time per request:       0.209 [ms] (mean, across all concurrent requests)
Transfer rate:          1259.79 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0   28 213.4      1   15036
Processing:     9   76  21.5     74    1708
Waiting:        1   75  21.5     73    1708
Total:         37  104 216.7     75   15114

Percentage of the requests served within a certain time (ms)
  50%     75
  66%     77
  75%     78
  80%     79
  90%     83
  95%     87
  98%   1072
  99%   1079
 100%  15114 (longest request)



13. Recopilemos los resultados más importantes de ambos test:

tiempo(s) - nginx: 312.641
tiempo(s) - haproxy: 209.298

peticiones/segundo - nginx: 3198.56
peticiones/segundo - haproxy: 4777.87

tasa de transferencia (Kb/s) - nginx: 840.12
tasa de transferencia (Kb/s) - haproxy: 1259.79 

Como se puede apreciar en los benchmark realizados, el balanceador corriendo con haproxy ofrece mejores prestaciones que con nginx.